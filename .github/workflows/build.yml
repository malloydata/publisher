name: build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# self contained tests
jobs:
  lint:
    name: Typecheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        # Building the SDK is necessary to generate the .d.ts files used for type checking.
      - name: Typecheck
        run: |
          bun install
          bun run generate-api-types
          bun run build:sdk
          bun run typecheck
  lint_format:
    name: Lint and check formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
      - name: Install dependencies
        run: bun install
      - name: Check formatting
        run: bunx prettier './packages/**/*.{ts,tsx}' --check
      - name: Lint
        run: bun run lint
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "true" # Fetch submodules
      - name: Spin-up services
        run: docker compose --profile ci up -d
      - name: Install dependencies
        run: docker exec -t publisher-ci bun install
      - name: Build code
        run: docker exec -t publisher-ci bun run build
      - name: Run tests
        run: docker exec -t publisher-ci sh -c "cd packages/server && bun test ./src/service/model.spec.ts ./src/service/package.spec.ts ./src/__tests__/setup.spec.ts ./src/__tests__/mcp_execute_query_tool.integration.spec.ts ./src/__tests__/mcp_resource.integration.spec.ts ./src/__tests__/mcp_transport.integration.spec.ts"
  npx_test:
    name: npx test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "true" # Fetch submodules
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      - name: Install Bun
        run: curl -fsSL https://bun.sh/install | bash && echo "$HOME/.bun/bin" >> $GITHUB_PATH
      - name: build server
        run: bun install && bun run build
      - name: Link local package
        run: |
          cd packages/server && npm link
      - name: Start npx server
        run: |
          cd packages/server && npx malloy-publisher --port 4002 --server_root ./ &
          sleep 12
      - name: Test API endpoint
        run: |
          response=$(curl -s http://localhost:4002/api/v0/projects)
          echo "API Response: $response"
          # Check if response is a JSON array with 1 entry
          if echo "$response" | jq -e '. | length == 1' > /dev/null; then
            echo "✓ API test passed: Found 1 project"
          else
            echo "✗ API test failed: Expected 1 project, got different response"
            exit 1
          fi
